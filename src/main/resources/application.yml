spring:
  application:
    name: reservation-service

  datasource:
    url: jdbc:postgresql://reservation-db:5432/reservationdb
    username: reservationapp
    password: password
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:29092
    producer:
      retries: 3
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        retry-backoff-ms: 2000
        spring.json.add.type.headers: true
        spring.json.type.mapping: reservationEvent:com.hotelapp.reservation.event.ReservationCreatedEvent
    consumer:
      group-id: reservation-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
    admin:
      auto-create: true
      properties:
        allow.auto.create.topics: true

server:
  port: 8082

logging:
  level:
    root: INFO
    com.hotelapp: DEBUG
    org.hibernate.SQL: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics